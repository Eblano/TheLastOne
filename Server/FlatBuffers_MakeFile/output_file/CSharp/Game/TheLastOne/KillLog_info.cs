// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Game.TheLastOne
{

using global::System;
using global::FlatBuffers;

public struct KillLog_info : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static KillLog_info GetRootAsKillLog_info(ByteBuffer _bb) { return GetRootAsKillLog_info(_bb, new KillLog_info()); }
  public static KillLog_info GetRootAsKillLog_info(ByteBuffer _bb, KillLog_info obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public KillLog_info __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string LeftNick { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetLeftNickBytes() { return __p.__vector_as_arraysegment(4); }
  public string RightNick { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetRightNickBytes() { return __p.__vector_as_arraysegment(6); }

  public static Offset<KillLog_info> CreateKillLog_info(FlatBufferBuilder builder,
      StringOffset LeftNickOffset = default(StringOffset),
      StringOffset RightNickOffset = default(StringOffset)) {
    builder.StartObject(2);
    KillLog_info.AddRightNick(builder, RightNickOffset);
    KillLog_info.AddLeftNick(builder, LeftNickOffset);
    return KillLog_info.EndKillLog_info(builder);
  }

  public static void StartKillLog_info(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddLeftNick(FlatBufferBuilder builder, StringOffset LeftNickOffset) { builder.AddOffset(0, LeftNickOffset.Value, 0); }
  public static void AddRightNick(FlatBufferBuilder builder, StringOffset RightNickOffset) { builder.AddOffset(1, RightNickOffset.Value, 0); }
  public static Offset<KillLog_info> EndKillLog_info(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<KillLog_info>(o);
  }
};


}
